version: "3"
services:
  coap-calculator:
    labels:
      - traefik.udp.routers.coap-calculator.entrypoints=coap-calculator
    build:
      context: ./things/calculator/
      dockerfile: ./coap/js/Dockerfile
  http-express-calculator:
    labels:
      - traefik.http.routers.http-express-calculator.rule=PathPrefix(`/http-express-calculator`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/express/Dockerfile
  http-flask-calculator:
    labels:
      - traefik.http.routers.http-flask-calculator.rule=PathPrefix(`/http-flask-calculator`)
    build:
      context: ./things/calculator/
      dockerfile: ./http/flask/Dockerfile
  mqtt-calculator:
    build:
      context: ./things/calculator/
      dockerfile: ./mqtt/js/Dockerfile
  modbus-lift:
    labels:
      - traefik.tcp.routers.modbus-calculator.entrypoints=modbus-lift
      - traefik.tcp.routers.modbus-calculator.rule=HostSNI(`*`)
    build:
      context: ./things/lift/
      dockerfile: ./modbus/js/Dockerfile
    ports:
      - "38502:38502"
  reverse-proxy:
    image: traefik:v3.0
    command: 
      - "--log.level=DEBUG"
      - "--api.insecure=true" 
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.modbus-lift.address=:3179"
      - "--entrypoints.coap-calculator.address=:3179/udp"
    ports:
      - "80:80"
      - "3179:3179"
      - "3179:3179/udp"
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
